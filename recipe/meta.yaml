{% set version = "4.0.3" %}
{% set sha256 = "1402feced8c3847b3ab8252165b90f7d1fa28c23b6b2ca4632b6e4971267fd03" %}
{% set major = version.rpartition('.')[0] %}

package:
  # must not match any outputs for requirements to be handled correctly
  name: openmpi-mpi
  version: {{ version }}

source:
  url: https://www.open-mpi.org/software/ompi/v{{ major }}/downloads/openmpi-{{ version }}.tar.bz2
  sha256: {{ sha256 }}

build:
  number: 0
  skip: true  # [win or osx or (linux64 and cuda_compiler_version != '9.2')]

outputs:
  - name: openmpi
    script: build-mpi.sh
    build:
      run_exports:
        - {{ pin_subpackage('openmpi', min_pin='x.x.x', max_pin='x.x') }}
      ignore_run_exports:
        - cudatoolkit
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ compiler('fortran') }}
        - {{ compiler('cuda') }}  # [linux64]
        - make  # [unix]
        - perl 5.26.2
      host:
        - zlib
      run:
        - zlib
        - mpi 1.0 openmpi
      run_constrained:
        - cudatoolkit >={{ cuda_compiler_version }}  # [linux64]
    test:
      script: run_test.sh
      files:
        - mpiexec.sh
        - tests/helloworld.sh

  - name: openmpi-mpicc
    build:
      script:
        - echo 'ok'  # [not osx]
        # make CONDA_BUILD_SYSROOT a 'used variable'
        # so that conda-build knows to pass it to the test env
        - echo "{{CONDA_BUILD_SYSROOT}}"  # [osx]
    requirements:
      run:
        - {{ pin_subpackage('openmpi', exact=True) }}
        # host C compilers work fine (better) on mac
        - {{ compiler('c') }}
    test:
      script: run_test.sh
      files:
        - mpiexec.sh
        - tests/helloworld.c

  - name: openmpi-mpicxx
    build:
      script:
        - echo 'ok'  # [not osx]
        # make CONDA_BUILD_SYSROOT a 'used variable'
        # so that conda-build knows to pass it to the test env
        - echo "{{CONDA_BUILD_SYSROOT}}"  # [osx]
    requirements:
      run:
        - {{ pin_subpackage('openmpi', exact=True) }}
        # host C compilers work fine (better) on mac
        - {{ compiler('cxx') }}
    test:
      script: run_test.sh
      files:
        - mpiexec.sh
        - tests/helloworld.cxx

  - name: openmpi-mpifort
    build:
      script:
        - echo 'ok'  # [not osx]
        # make CONDA_BUILD_SYSROOT a 'used variable'
        # so that conda-build knows to pass it to the test env
        - echo "{{CONDA_BUILD_SYSROOT}}"  # [osx]
    requirements:
      run:
        - {{ pin_subpackage('openmpi', exact=True) }}
        - {{ compiler('fortran') }}
    test:
      script: run_test.sh
      files:
        - mpiexec.sh
        - tests/helloworld.f
        - tests/helloworld.f90

about:
  home: https://www.open-mpi.org/
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: An open source Message Passing Interface implementation.
  description: |
    The Open MPI Project is an open source Message Passing Interface
    implementation that is developed and maintained by a consortium of academic,
    research, and industry partners.
  doc_url: https://www.open-mpi.org/doc/
  dev_url: https://github.com/open-mpi/ompi
